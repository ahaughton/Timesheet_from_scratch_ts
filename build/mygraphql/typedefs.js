"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typedefs = void 0;
var apollo_server_express_1 = require("apollo-server-express");
var _a = require("graphql-scalars"), GraphQLDate = _a.GraphQLDate, GraphQLDateTime = _a.GraphQLDateTime, GraphQLTime = _a.GraphQLTime;
exports.typedefs = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n# type Query {\n#     hello: String\n# }\nscalar Date\nscalar Time\nscalar DateTime\n\ntype Query{\n    Tasks: [task!]\n    Taskbyid(id:ID): task\n    Taskbyprojectname(projectname:String): [task]\n\n   # Userbyemail(email:string): User\n}\n\ntype Mutation {\n    createTaskGQ (projectname:String, \n                  projectowner:String, \n                  projectdescription:String,\n                  input:activityInputGQ\n                ):task \n}\ntype Mutation {\n    createTaskandactivityGQ (input:taskinputGQ):task,\n    addActivitiesGQ (projectid: String,input:activityInputGQ):activity\n    updateTaskHeaderGQ (taskid: ID, input:taskinputGQ):task\n    deleteTaskGQ(taskid:ID):task\n    updateAcitivityGQ(taskid:ID, activityid: ID, input: activityInputGQ):activity\n    deleteAcitivityGQ(taskid:ID, activityid: ID):activity\n\n    #registeruser(input: userInputGQ): User\n}\n\ntype task\n{   \n    id: ID\n    projectname: String\n    projectowner: String\n    projectdescription: String \n    activities: [activity]\n  \n}\n\ntype activity{\n    jobdescription: String\n    user_name: String\n    jobcategory: String \n    timestart: DateTime\n    timestop: DateTime\n    comments: String       \n}\n\ninput taskinputGQ \n{\n    projectname: String\n    projectowner: String\n    projectdescription: String\n    activities: activityInputGQ\n}\ninput activityInputGQ\n{\n     \n    jobdescription: String\n    user_name: String\n    jobcategory: String \n    timestart: DateTime\n    timestop: DateTime\n    comments: String \n}\n\n\n"], ["\n# type Query {\n#     hello: String\n# }\nscalar Date\nscalar Time\nscalar DateTime\n\ntype Query{\n    Tasks: [task!]\n    Taskbyid(id:ID): task\n    Taskbyprojectname(projectname:String): [task]\n\n   # Userbyemail(email:string): User\n}\n\ntype Mutation {\n    createTaskGQ (projectname:String, \n                  projectowner:String, \n                  projectdescription:String,\n                  input:activityInputGQ\n                ):task \n}\ntype Mutation {\n    createTaskandactivityGQ (input:taskinputGQ):task,\n    addActivitiesGQ (projectid: String,input:activityInputGQ):activity\n    updateTaskHeaderGQ (taskid: ID, input:taskinputGQ):task\n    deleteTaskGQ(taskid:ID):task\n    updateAcitivityGQ(taskid:ID, activityid: ID, input: activityInputGQ):activity\n    deleteAcitivityGQ(taskid:ID, activityid: ID):activity\n\n    #registeruser(input: userInputGQ): User\n}\n\ntype task\n{   \n    id: ID\n    projectname: String\n    projectowner: String\n    projectdescription: String \n    activities: [activity]\n  \n}\n\ntype activity{\n    jobdescription: String\n    user_name: String\n    jobcategory: String \n    timestart: DateTime\n    timestop: DateTime\n    comments: String       \n}\n\ninput taskinputGQ \n{\n    projectname: String\n    projectowner: String\n    projectdescription: String\n    activities: activityInputGQ\n}\ninput activityInputGQ\n{\n     \n    jobdescription: String\n    user_name: String\n    jobcategory: String \n    timestart: DateTime\n    timestop: DateTime\n    comments: String \n}\n\n\n"])));
var templateObject_1;
